spring:
  application:
    name: api-gateway

  cloud:
    gateway:
      server:
        webflux:
          routes:

            # 1. Catálogo: Búsqueda dinámica (POST -> GET)
            - id: catalogue-search
              uri: lb://ms-books-catalogue
              predicates:
                - Path=/catalogue/search
                - Method=POST
              filters:
                - SetRequestHeader=X-HTTP-Method-Override, GET
                - RewritePath=/catalogue/search, /api/catalogue/books

            # 2. Catálogo: Obtener libro por ID (POST -> GET)
            - id: catalogue-get
              uri: lb://ms-books-catalogue
              predicates:
                - Path=/catalogue/get/(?<id>\\d+)
                - Method=POST
              filters:
                - SetRequestHeader=X-HTTP-Method-Override, GET
                - RewritePath=/catalogue/get/(?<id>\\d+), /api/catalogue/books/${id}

            # 3. Catálogo: Crear libro (POST -> POST)
            - id: catalogue-create
              uri: lb://ms-books-catalogue
              predicates:
                - Path=/catalogue/create
                - Method=POST
              filters:
                - RewritePath=/catalogue/create, /api/catalogue/books

            # 4. Catálogo: Actualizar completo (POST -> PUT)
            - id: catalogue-update
              uri: lb://ms-books-catalogue
              predicates:
                - Path=/catalogue/update/(?<id>\\d+)
                - Method=POST
              filters:
                - SetRequestHeader=X-HTTP-Method-Override, PUT
                - RewritePath=/catalogue/update/(?<id>\\d+), /api/catalogue/books/${id}

            # 5. Catálogo: Actualizar parcial (POST -> PATCH)
            - id: catalogue-patch
              uri: lb://ms-books-catalogue
              predicates:
                - Path=/catalogue/patch/(?<id>\\d+)
                - Method=POST
              filters:
                - SetRequestHeader=X-HTTP-Method-Override, PATCH
                - RewritePath=/catalogue/patch/(?<id>\\d+), /api/catalogue/books/${id}

            # 6. Catálogo: Eliminar (POST -> DELETE)
            - id: catalogue-delete
              uri: lb://ms-books-catalogue
              predicates:
                - Path=/catalogue/delete/(?<id>\\d+)
                - Method=POST
              filters:
                - SetRequestHeader=X-HTTP-Method-Override, DELETE
                - RewritePath=/catalogue/delete/(?<id>\\d+), /api/catalogue/books/${id}

            # 7. Payments: Registrar compra (POST -> POST)
            - id: payments-create
              uri: lb://ms-books-payments
              predicates:
                - Path=/payments/create
                - Method=POST
              filters:
                - RewritePath=/payments/create, /api/payments/orders

            # 8. Payments: Listar compras (POST -> GET)
            - id: payments-list
              uri: lb://ms-books-payments
              predicates:
                - Path=/payments/list
                - Method=POST
              filters:
                - SetRequestHeader=X-HTTP-Method-Override, GET
                - RewritePath=/payments/list, /api/payments/orders

server:
  port: 8080

eureka:
  client:
    service-url:
      defaultZone: http://localhost:8761/eureka/
    register-with-eureka: true
    fetch-registry: true
    healthcheck:
      enabled: true
  instance:
    prefer-ip-address: true
    hostname: localhost
    instance-id: ${spring.application.name}:${spring.application.instance_id:${random.value}}

logging:
  level:
    org.springframework.cloud.gateway: DEBUG
    com.netflix.eureka: DEBUG
    org.springframework.cloud.loadbalancer: DEBUG

management:
  endpoints:
    web:
      exposure:
        include: health, gateway
  endpoint:
    gateway:
      access: unrestricted